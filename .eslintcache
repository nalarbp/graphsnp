[{"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/index.js":"1","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/App.js":"2","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reportWebVitals.js":"3","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/configureStore.js":"4","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/navigation/header.js":"5","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/history.js":"6","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/index.js":"7","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_footer.js":"8","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_graphsnp/comp_sider.js":"9","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_graphsnp/comp_graphContainer.js":"10","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/navigation/navigation.js":"11","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/inputActions.js":"12","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/navigationActions.js":"13","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/graphSettingsActions.js":"14","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/sequenceReducer.js":"15","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/navSettingsReducer.js":"16","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/graphSettingsReducer.js":"17","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/utils.js":"18","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/constants.js":"19","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/isInputLoadingReducer.js":"20","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/main_home.js":"21","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_documentation/main_documentation.js":"22","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_graphsnp/main_graphsnp.js":"23","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/graphMatrixActions.js":"24","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/prevGraphReducer.js":"25","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/prevGraphActions.js":"26","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/create_cyData.js":"27","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/model/hammingMatrix_prop.js":"28","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/hammMatrixReducer.js":"29","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/create_graphObject.js":"30","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/graphObjectReducer.js":"31","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/construct_mcg.js":"32","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/cluster_fcc.js":"33","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/find_clusters.js":"34","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/graphClustersReducer.js":"35","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/colorLUTReducer.js":"36","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/colorActions.js":"37","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/metadataReducer.js":"38","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/phyloTimeTreeReducer.js":"39","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_snpsLoader.js":"40","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_metadataLoader.js":"41","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_phylotimetreeLoader.js":"42","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/util_inputLoaders.js":"43","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/model/graphEdgeList_prop.js":"44","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/construct_cathai.js":"45","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/cluster_louvain.js":"46","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/categoricalMapReducer.js":"47","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/categoricalMapActions.js":"48","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/construct_cge.js":"49","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_titleHeader.js":"50","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_snpDistance/comp_snpDist_settings.js":"51","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_snpDistance/comp_snpDist_viewer.js":"52","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/snpDistSettingsReducer.js":"53","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_snpDistance/main_snpDist.js":"54","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/snpdistSettingsActions.js":"55","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/hooks/hook_resizeObserver.js":"56"},{"size":663,"mtime":1610195666935,"results":"57","hashOfConfig":"58"},{"size":1045,"mtime":1612155926082,"results":"59","hashOfConfig":"58"},{"size":362,"mtime":1610086392986,"results":"60","hashOfConfig":"58"},{"size":477,"mtime":1610107486220,"results":"61","hashOfConfig":"58"},{"size":717,"mtime":1610950774877,"results":"62","hashOfConfig":"58"},{"size":88,"mtime":1610155012196,"results":"63","hashOfConfig":"58"},{"size":2122,"mtime":1612161118998,"results":"64","hashOfConfig":"58"},{"size":1199,"mtime":1612227554727,"results":"65","hashOfConfig":"58"},{"size":7878,"mtime":1612167145109,"results":"66","hashOfConfig":"58"},{"size":10011,"mtime":1612102555953,"results":"67","hashOfConfig":"58"},{"size":2639,"mtime":1612146547627,"results":"68","hashOfConfig":"58"},{"size":491,"mtime":1612088526556,"results":"69","hashOfConfig":"58"},{"size":159,"mtime":1611887099249,"results":"70","hashOfConfig":"58"},{"size":1607,"mtime":1612100488721,"results":"71","hashOfConfig":"58"},{"size":378,"mtime":1610108902860,"results":"72","hashOfConfig":"58"},{"size":584,"mtime":1610154547016,"results":"73","hashOfConfig":"58"},{"size":3651,"mtime":1612102328962,"results":"74","hashOfConfig":"58"},{"size":2336,"mtime":1612152218866,"results":"75","hashOfConfig":"58"},{"size":1801,"mtime":1612155247243,"results":"76","hashOfConfig":"58"},{"size":401,"mtime":1610683140985,"results":"77","hashOfConfig":"58"},{"size":2838,"mtime":1612158289116,"results":"78","hashOfConfig":"58"},{"size":747,"mtime":1610950423257,"results":"79","hashOfConfig":"58"},{"size":605,"mtime":1611803437017,"results":"80","hashOfConfig":"58"},{"size":452,"mtime":1611822450355,"results":"81","hashOfConfig":"58"},{"size":383,"mtime":1611039003510,"results":"82","hashOfConfig":"83"},{"size":156,"mtime":1611039074948,"results":"84","hashOfConfig":"83"},{"size":1764,"mtime":1612010836604,"results":"85","hashOfConfig":"58"},{"size":3050,"mtime":1612009209303,"results":"86","hashOfConfig":"58"},{"size":390,"mtime":1611802301584,"results":"87","hashOfConfig":"58"},{"size":1221,"mtime":1612096379808,"results":"88","hashOfConfig":"58"},{"size":391,"mtime":1611809625614,"results":"89","hashOfConfig":"58"},{"size":2952,"mtime":1612014278138,"results":"90","hashOfConfig":"58"},{"size":4174,"mtime":1612021742057,"results":"91","hashOfConfig":"58"},{"size":499,"mtime":1612021206837,"results":"92","hashOfConfig":"58"},{"size":396,"mtime":1611822589287,"results":"93","hashOfConfig":"58"},{"size":379,"mtime":1611887208678,"results":"94","hashOfConfig":"58"},{"size":220,"mtime":1611889589251,"results":"95","hashOfConfig":"58"},{"size":379,"mtime":1612088497120,"results":"96","hashOfConfig":"58"},{"size":399,"mtime":1612088526556,"results":"97","hashOfConfig":"58"},{"size":5238,"mtime":1612166082944,"results":"98","hashOfConfig":"58"},{"size":2734,"mtime":1612140310548,"results":"99","hashOfConfig":"58"},{"size":4788,"mtime":1612140336405,"results":"100","hashOfConfig":"58"},{"size":3940,"mtime":1612145718464,"results":"101","hashOfConfig":"58"},{"size":1506,"mtime":1612096439427,"results":"102","hashOfConfig":"58"},{"size":1548,"mtime":1612014276860,"results":"103","hashOfConfig":"58"},{"size":990,"mtime":1612023049857,"results":"104","hashOfConfig":"58"},{"size":408,"mtime":1612088419622,"results":"105","hashOfConfig":"58"},{"size":250,"mtime":1612088403076,"results":"106","hashOfConfig":"58"},{"size":1956,"mtime":1612169001474,"results":"107","hashOfConfig":"58"},{"size":487,"mtime":1612141196612,"results":"108","hashOfConfig":"58"},{"size":3834,"mtime":1612167334198,"results":"109","hashOfConfig":"58"},{"size":4521,"mtime":1612219084632,"results":"110","hashOfConfig":"58"},{"size":1889,"mtime":1612155536716,"results":"111","hashOfConfig":"58"},{"size":881,"mtime":1612167199349,"results":"112","hashOfConfig":"58"},{"size":777,"mtime":1612155795199,"results":"113","hashOfConfig":"58"},{"size":671,"mtime":1612161595706,"results":"114","hashOfConfig":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"10exqss",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"117"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"117"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"13s4y1q",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"117"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"117"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/index.js",[],["233","234"],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/App.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reportWebVitals.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/configureStore.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/navigation/header.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/history.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/index.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_footer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_graphsnp/comp_sider.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_graphsnp/comp_graphContainer.js",["235","236","237"],"/*\n- Comp init => render => all useEffect\n- loading wont work using states, use indicator on draw button instead\n- All useEffect called when first loaded (eg: from Home to graphSNP page)\n- certain useEffect called when any deppendent useEffect affected\n*/\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { colorLUTtoStore } from \"../action/colorActions\";\nimport { Col, Empty, message } from \"antd\";\nimport { createGraphObject } from \"../utils/create_graphObject\";\nimport { createCytoscapeData } from \"../utils/create_cyData\";\nimport { findClusters } from \"../utils//find_clusters\";\nimport cytoscape from \"cytoscape\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport {\n  createColorLUT,\n  getColorByColorIndex,\n  getEdgeAndArrowWidth,\n} from \"../utils/utils\";\nimport HammingMatrix from \"../model/hammingMatrix_prop\";\nimport {\n  hmmMatrixToStore,\n  graphObjectToStore,\n  graphClusterToStore,\n} from \"../action/graphMatrixActions\";\nimport {\n  changeIsUserReDrawSetting,\n  changeIsUserClusteringSetting,\n} from \"../action/graphSettingsActions\";\n\nconst _ = require(\"lodash\");\n\nconst GraphContainer = (props) => {\n  //state\n  const [graphIsAvailable, setGraphIsAvailable] = useState(false);\n  const [processingGraph, setProcessingGraph] = useState(false);\n\n  //Settings\n  const graph_method = props.graphSettings.method;\n  const graph_layout = props.graphSettings.layout;\n  const graph_isUserReDraw = props.graphSettings.isUserReDraw;\n  const graph_edgeFilterCutoff = props.graphSettings.edgeFilterCutoff;\n  const graph_clusterMethod = props.graphSettings.clusterMethod;\n  const graph_isUserClustering = props.graphSettings.isUserClustering;\n  const graph_colorNodeBy = props.graphSettings.colorNodedBy;\n  const graph_isEdgeScaled = props.graphSettings.isEdgeScaled;\n  const graph_edgeScaleFactor = props.graphSettings.edgeScaleFactor;\n  //const graph_exportFormat = props.graphSettings.exportFormat;\n  //const graph_isUserDownloading = props.graphSettings.isUserDownloading;\n\n  //Internal setting\n  const cy_layout = { name: graph_layout, animate: false, fit: true };\n  const cytoscapeRef = useRef(null);\n\n  useEffect(() => {\n    if (graph_isUserReDraw) {\n      setProcessingGraph(true);\n      setTimeout(function () {\n        draw();\n        setGraphIsAvailable(true);\n        setProcessingGraph(false);\n        props.changeIsUserReDrawSetting(false);\n      }, 100);\n    }\n  }, [graph_isUserReDraw]);\n\n  useEffect(() => {\n    if (graph_isUserClustering && props.graphObject) {\n      setProcessingGraph(true);\n      setTimeout(function () {\n        //call clustering\n        let clusters = findClusters(props.graphObject, graph_clusterMethod);\n        setProcessingGraph(false);\n        message.success(\n          `Found ${clusters.group.length} clusters in the graph`,\n          2\n        );\n        //update colorLUT by new clusters color\n        let colorLUT_byCluster = createColorLUT(clusters.members, \"clusterID\");\n        let newColorLUT = _.cloneDeep(props.colorLUT);\n        if (newColorLUT) {\n          let updated_newColorLUT = {\n            ...newColorLUT,\n            clusterID: colorLUT_byCluster,\n          };\n          newColorLUT = updated_newColorLUT;\n        } else {\n          newColorLUT = { clusterID: colorLUT_byCluster };\n        }\n        props.colorLUTtoStore(newColorLUT);\n\n        props.graphClusterToStore(clusters);\n        props.changeIsUserClusteringSetting(false);\n      }, 100);\n    }\n  }, [graph_clusterMethod, graph_isUserClustering]);\n\n  useEffect(() => {\n    if (graph_layout && cytoscapeRef.current) {\n      let cy = cytoscapeRef.current;\n      let layout = { name: graph_layout, animate: false, fit: true };\n      cy.layout(layout).run();\n      cytoscapeRef.current = cy;\n    }\n  }, [graph_layout]);\n\n  useEffect(() => {\n    if (props.graphObject && cytoscapeRef.current) {\n      let cy = cytoscapeRef.current;\n      if (graph_isEdgeScaled) {\n        cy.style()\n          .selector(\"edge\")\n          .style({\n            width: function (e) {\n              return getEdgeAndArrowWidth(\n                graph_isEdgeScaled,\n                e.data(\"weight\"),\n                graph_edgeScaleFactor,\n                \"edge\"\n              );\n            },\n            \"arrow-scale\": function (e) {\n              return getEdgeAndArrowWidth(\n                graph_isEdgeScaled,\n                e.data(\"weight\"),\n                graph_edgeScaleFactor,\n                \"arrow\"\n              );\n            },\n          })\n          .update();\n        cytoscapeRef.current = cy;\n      } else {\n        cy.style()\n          .selector(\"edge\")\n          .style({\n            width: 3,\n            \"arrow-scale\": 1,\n          })\n          .update();\n        cytoscapeRef.current = cy;\n      }\n\n      cytoscapeRef.current = cy;\n    }\n  }, [graph_isEdgeScaled, graph_edgeScaleFactor]);\n\n  useEffect(() => {\n    if (graph_colorNodeBy && props.colorLUT && cytoscapeRef.current) {\n      let cy = cytoscapeRef.current;\n      //console.log(graph_colorNodeBy, props.colorLUT);\n      cy.style()\n        .selector(\"node\")\n        .style({\n          \"background-color\": function (d) {\n            let isolate_name = d.data(\"id\");\n            let col = getColorByColorIndex(\n              isolate_name,\n              graph_colorNodeBy,\n              props.colorLUT\n            );\n            //console.log(props.colorLUT[graph_colorNodeBy]);\n            return col;\n          },\n        })\n        .update();\n\n      cytoscapeRef.current = cy;\n    }\n  }, [graph_colorNodeBy, props.colorLUT]);\n\n  //DRAW\n  function draw() {\n    //check hamming distance ? if not create one, send to store at the end.\n    const hammingMatrix = !props.hammMatrix\n      ? new HammingMatrix(props.sequence).getHammingMatrix()\n      : props.hammMatrix;\n\n    //Look at param (method, seq, ), generate graph object: util functions\n    //graphObject: {type:'mcg', mapData: edgeList object}\n    const graphObject = createGraphObject(\n      hammingMatrix,\n      graph_method,\n      graph_edgeFilterCutoff,\n      props.categoricalMap,\n      props.phyloTimeTree\n    );\n\n    //generate cytoscape data\n    //graphObject = [{data:{id:id, nodeType:'singleton', data:[]}}, { data: {source: s, target: t, weight: w} } ]\n    const cytoscapeData = createCytoscapeData(graphObject);\n\n    //Load and view cytoscape\n    if (cytoscapeData) {\n      const cy = cytoscape({\n        elements: cytoscapeData,\n        container: document.getElementById(\"graph-cont-cytoscape-canvas\"),\n        pannable: true,\n        selected: true,\n        boxSelectionEnabled: false,\n        style: [\n          {\n            selector: \"node\",\n            style: {\n              label: \"data(id)\",\n              \"border-width\": 3,\n              \"border-style\": \"solid\",\n              \"border-color\": \"black\",\n              \"background-color\": \"lightgray\",\n            },\n          },\n          {\n            selector: \"edge\",\n            style: {\n              label: \"data(weight)\",\n              \"font-size\": \"8px\",\n              \"text-background-color\": \"#F5E372\",\n              color: \"black\",\n              width: function (e) {\n                return getEdgeAndArrowWidth(\n                  graph_isEdgeScaled,\n                  e.data(\"weight\"),\n                  graph_edgeScaleFactor,\n                  \"edge\"\n                );\n              },\n              \"target-arrow-color\": \"black\",\n              \"target-arrow-shape\": (e) => {\n                return e.data(\"dir\") === \"forward\" ? \"triangle\" : \"none\";\n              },\n              \"curve-style\": \"bezier\",\n              \"arrow-scale\": function (e) {\n                return getEdgeAndArrowWidth(\n                  graph_isEdgeScaled,\n                  e.data(\"weight\"),\n                  graph_edgeScaleFactor,\n                  \"arrow\"\n                );\n              },\n            },\n          },\n          {\n            selector: \":selected\",\n            style: {\n              \"border-width\": \"5\",\n              \"border-color\": \"red\",\n              \"border-style\": \"dashed\",\n              padding: \"8px\",\n            },\n          },\n        ],\n      });\n      cy.layout(cy_layout).run();\n      //save current Ref\n      cytoscapeRef.current = cy;\n\n      //==== SEND TO STORE ====\n      if (props.hammMatrix) {\n        props.hmmMatrixToStore(hammingMatrix);\n      }\n      props.graphObjectToStore(graphObject);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Col span={24} style={{ position: \"relative\" }}>\n        <div\n          id=\"graph-cont-is-empty\"\n          style={{ display: graphIsAvailable ? \"none\" : \"block\" }}\n        >\n          <Empty\n            description={\"No previous graph found: click draw to create one\"}\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </div>\n        <div\n          id=\"graph-cont-is-processing\"\n          style={{ display: processingGraph ? \"block\" : \"none\" }}\n        >\n          <p>\n            <span>\n              <LoadingOutlined\n                style={{\n                  fontSize: 18,\n                }}\n                spin\n              />\n            </span>{\" \"}\n            Processing ...\n          </p>\n        </div>\n      </Col>\n      <div id=\"graph-cont-cytoscape-canvas\"></div>\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    metadata: state.metadata,\n    phyloTimeTree: state.phyloTimeTree,\n    sequence: state.sequence,\n    graphObject: state.graphObject,\n    hammMatrix: state.hammMatrix,\n    graphSettings: state.graphSettings,\n    colorLUT: state.colorLUT,\n    categoricalMap: state.categoricalMap,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      changeIsUserClusteringSetting,\n      changeIsUserReDrawSetting,\n      hmmMatrixToStore,\n      graphObjectToStore,\n      graphClusterToStore,\n      colorLUTtoStore,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GraphContainer);\n/*\n\n*/\n","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/navigation/navigation.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/inputActions.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/navigationActions.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/graphSettingsActions.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/sequenceReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/navSettingsReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/graphSettingsReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/utils.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/constants.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/isInputLoadingReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/main_home.js",["238"],"import React from \"react\";\nimport { Row, Col, Modal, Spin } from \"antd\";\nimport \"./style_home.css\";\nimport { connect } from \"react-redux\";\n//import { Link, NavLink } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { changeNavLocation } from \"../action/navigationActions\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport SNPsLoader from \"./comp_snpsLoader\";\nimport TitleHeader from \"./comp_titleHeader\";\nimport MetadataLoader from \"./comp_metadataLoader\";\nimport PhyloTimeTreeLoader from \"./comp_phylotimetreeLoader\";\nimport FooterComponent from \"./comp_footer\";\nimport Particles from \"react-particles-js\";\nimport { vh } from \"../utils/utils\";\n\nconst loadingIcon = <LoadingOutlined style={{ fontSize: 34 }} spin />;\nconst getParticleHeight = String(vh(100) - 380) + \"px\";\nconst particleParams = {\n  fpsLimit: 24,\n  particles: {\n    number: { value: 25 },\n    size: { value: 4 },\n    links: {\n      enable: true,\n      distance: 75,\n    },\n    move: {\n      enable: true,\n      speed: 2,\n      outModes: {\n        default: \"bounce\",\n      },\n    },\n  },\n  interactivity: {\n    events: {\n      onhover: {\n        enable: false,\n        mode: \"repulse\",\n      },\n    },\n  },\n};\n\nconst Home = (props) => {\n  //console.log(\"Home\");\n  return (\n    <React.Fragment>\n      <Row>\n        <Col xs={24} id=\"header-content\">\n          <Modal\n            visible={props.isInputLoading}\n            closable={false}\n            centered={true}\n            width={0}\n            footer={null}\n            bodyStyle={{\n              textAlign: \"center\",\n              padding: \"0px\",\n            }}\n          >\n            <Spin\n              indicator={loadingIcon}\n              style={{ color: \"white\" }}\n              tip=\"Processing...\"\n              size=\"large\"\n            />\n          </Modal>\n        </Col>\n      </Row>\n      <Row id=\"input-wrapper\">\n        <Particles\n          params={particleParams}\n          height={getParticleHeight}\n          style={{ position: \"absolute\", height: \"200px\" }}\n        />\n        <Col xs={24} sm={8}>\n          <SNPsLoader />\n        </Col>\n        <Col xs={24} sm={8}>\n          <MetadataLoader />\n        </Col>\n        <Col xs={24} sm={8}>\n          <PhyloTimeTreeLoader />\n        </Col>\n      </Row>\n      <FooterComponent />\n    </React.Fragment>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isInputLoading: state.isInputLoading,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      changeNavLocation,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n//Home called when navigating\n//Called when input is loaded (cause it subsribed to the store, so when the connected state change it will be re-called)\n/*\n<Col xs={24}>\n          <TitleHeader />\n        </Col>\n*/\n","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_documentation/main_documentation.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_graphsnp/main_graphsnp.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/graphMatrixActions.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/prevGraphReducer.js",[],["239","240"],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/prevGraphActions.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/create_cyData.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/model/hammingMatrix_prop.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/hammMatrixReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/create_graphObject.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/graphObjectReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/construct_mcg.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/cluster_fcc.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/utils/find_clusters.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/graphClustersReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/colorLUTReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/colorActions.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/metadataReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/phyloTimeTreeReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_snpsLoader.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_metadataLoader.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_phylotimetreeLoader.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/util_inputLoaders.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/model/graphEdgeList_prop.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/construct_cathai.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/cluster_louvain.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/categoricalMapReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/categoricalMapActions.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/algorithm/construct_cge.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_home/comp_titleHeader.js",["241"],"import { Row, Col } from \"antd\";\nimport React from \"react\";\nimport \"./style_home.css\";\nconst TitleHeaderComponent = (props) => {\n  return (\n    <React.Fragment>\n      <Col sm={16} id=\"title-header-component\">\n        <p>\n          GraphSNP: Graph-based outbreak cluster and transmission detection and\n          visualization using single-nucleotide polymorphism (SNP) in web\n          browser\n        </p>\n      </Col>\n    </React.Fragment>\n  );\n};\n\nexport default TitleHeaderComponent;\n","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_snpDistance/comp_snpDist_settings.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_snpDistance/comp_snpDist_viewer.js",["242","243","244","245","246","247","248","249"],"import React, { useEffect, useRef } from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./style_snpDist.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  dist_changeIsUserDraw,\n  dist_changeIsUserExport,\n} from \"../action/snpdistSettingsActions\";\nimport * as d3Select from \"d3-selection\";\nimport useResizeObserver from \"../hooks/hook_resizeObserver\";\nimport GraphEdgeList from \"../model/graphEdgeList_prop\";\nimport { vh } from \"../utils/utils\";\nimport * as d3Scale from \"d3-scale\";\nimport * as d3Array from \"d3-array\";\nimport * as d3Axis from \"d3-axis\";\n\nconst _ = require(\"lodash\");\n\nconst SNPdistViewer = (props) => {\n  //Ref\n  const chartContainerRef = useRef();\n  const snpdistSVGRef = useRef();\n\n  //Drawing constructor\n  const dimensions = useResizeObserver(chartContainerRef); //dim.width, dim.height\n  const dim_w = dimensions && dimensions.width ? dimensions.width : 300;\n  const dim_h = vh(100) - 300;\n  const margin = { top: 10, right: 20, bottom: 10, left: 20 };\n  const chartArea_width = dim_w - margin.left - margin.right;\n  const chartArea_height = dim_h - margin.top - margin.bottom;\n\n  //States\n\n  //Settings\n  const dataToDisplay = props.snpDistSettings.dataToDisplay;\n  const dataColumn = props.snpDistSettings.dataColumn;\n  const chartOrientation = props.snpDistSettings.chartType;\n  const snpDistExportFormat = props.snpDistSettings.snpDistExportFormat;\n  const isUserDrawChart = props.snpDistSettings.isUserDrawChart;\n  const isUserExportSnpDist = props.snpDistSettings.isUserExportSnpDist;\n\n  //UseEffect\n  useEffect(() => {\n    if (isUserDrawChart) {\n      setTimeout(() => {\n        draw();\n        props.dist_changeIsUserDraw(false);\n      }, 10);\n    }\n  }, [isUserDrawChart]);\n\n  //DRAWING\n  function draw() {\n    //clean previous drawing artifacts\n    //select(\"#snpdist_svgGroup\").remove();\n\n    //prepare data\n    let edgeList = [];\n    let nodeList = [];\n    props.hammingMatrix.forEach((v, k) => {\n      edgeList = edgeList.concat(v);\n      nodeList.push(k);\n    });\n    let chart_data = new GraphEdgeList(nodeList, edgeList).getSymetricEdges()\n      .edges;\n\n    const data_list = chart_data.map((d) => d.value);\n    const data_stats = {\n      min: d3Array.min(data_list),\n      q1: d3Array.quantile(data_list, 0.25),\n      median: d3Array.median(data_list),\n      mean: d3Array.mean(data_list),\n      q3: d3Array.quantile(data_list, 0.75),\n      max: d3Array.max(data_list),\n    };\n    const scale_y = d3Scale\n      .scaleLinear()\n      .domain([data_stats.min, data_stats.max])\n      .range([chartArea_height, 0]);\n\n    const svg = d3Select.select(snpdistSVGRef.current);\n    console.log(svg);\n    //set svg attributes\n    d3Select.select(\"#snpdist_svgGroup\").remove();\n    svg\n      .attr(\"width\", chartArea_width + margin.left + margin.right)\n      .attr(\"height\", chartArea_height + margin.top + margin.bottom);\n\n    //make group root of svg for transformation purpose\n    var jitterWidth = 300;\n    let svgGroup = svg\n      .append(\"g\")\n      .attr(\"id\", \"snpdist_svgGroup\")\n      .attr(\n        \"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")scale(1)\"\n      );\n\n    //create jitter plot\n    //add axis x\n    svgGroup\n      .selectAll(\".snp-dist-points\")\n      .data(chart_data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"snp-dist-points\")\n      .attr(\"cy\", function (d) {\n        return jitterWidth / 2 + Math.random() * jitterWidth;\n      })\n      .attr(\"cx\", function (d) {\n        return scale_y(d.value);\n      })\n      .attr(\"r\", 4)\n      .style(\"fill\", \"white\")\n      .attr(\"stroke\", \"black\");\n\n    // if (dataToDisplay === \"all\") {\n    //   // draw a violin + jitter + boxplot for all, color coded by selected column\n    // } else {\n    //   //draw charts based on factors from the column\n    // }\n  }\n\n  return (\n    <Row>\n      <Col sm={24}>\n        <div\n          id=\"snpdist-chart-container\"\n          ref={chartContainerRef}\n          style={{ height: \"100%\", width: \"100%\" }}\n        >\n          <svg id=\"snpdist-chart-svg\" ref={snpdistSVGRef}></svg>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    snpDistSettings: state.snpDistSettings,\n    hammingMatrix: state.hammMatrix,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      dist_changeIsUserDraw,\n      dist_changeIsUserExport,\n    },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SNPdistViewer);\n","/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/reducers/snpDistSettingsReducer.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/page_snpDistance/main_snpDist.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/action/snpdistSettingsActions.js",[],"/Volumes/BUDI/PhD/0_THESIS/chapter_graphSNP/APP/graph-snp/src/hooks/hook_resizeObserver.js",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":67,"column":6,"nodeType":"256","endLine":67,"endColumn":26,"suggestions":"257"},{"ruleId":"254","severity":1,"message":"258","line":98,"column":6,"nodeType":"256","endLine":98,"endColumn":51,"suggestions":"259"},{"ruleId":"254","severity":1,"message":"260","line":148,"column":6,"nodeType":"256","endLine":148,"endColumn":49,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":10,"column":8,"nodeType":"264","messageId":"265","endLine":10,"endColumn":19},{"ruleId":"250","replacedBy":"266"},{"ruleId":"252","replacedBy":"267"},{"ruleId":"262","severity":1,"message":"268","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":13},{"ruleId":"262","severity":1,"message":"269","line":16,"column":13,"nodeType":"264","messageId":"265","endLine":16,"endColumn":19},{"ruleId":"262","severity":1,"message":"270","line":18,"column":7,"nodeType":"264","messageId":"265","endLine":18,"endColumn":8},{"ruleId":"262","severity":1,"message":"271","line":36,"column":9,"nodeType":"264","messageId":"265","endLine":36,"endColumn":22},{"ruleId":"262","severity":1,"message":"272","line":37,"column":9,"nodeType":"264","messageId":"265","endLine":37,"endColumn":19},{"ruleId":"262","severity":1,"message":"273","line":38,"column":9,"nodeType":"264","messageId":"265","endLine":38,"endColumn":25},{"ruleId":"262","severity":1,"message":"274","line":39,"column":9,"nodeType":"264","messageId":"265","endLine":39,"endColumn":28},{"ruleId":"262","severity":1,"message":"275","line":41,"column":9,"nodeType":"264","messageId":"265","endLine":41,"endColumn":28},{"ruleId":"254","severity":1,"message":"255","line":51,"column":6,"nodeType":"256","endLine":51,"endColumn":23,"suggestions":"276"},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'draw' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["279"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["280"],"React Hook useEffect has a missing dependency: 'props.graphObject'. Either include it or remove the dependency array.",["281"],"no-unused-vars","'TitleHeader' is defined but never used.","Identifier","unusedVar",["277"],["278"],"'Row' is defined but never used.","'d3Axis' is defined but never used.","'_' is assigned a value but never used.","'dataToDisplay' is assigned a value but never used.","'dataColumn' is assigned a value but never used.","'chartOrientation' is assigned a value but never used.","'snpDistExportFormat' is assigned a value but never used.","'isUserExportSnpDist' is assigned a value but never used.",["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},"Update the dependencies array to be: [draw, graph_isUserReDraw, props]",{"range":"291","text":"292"},"Update the dependencies array to be: [graph_clusterMethod, graph_isUserClustering, props]",{"range":"293","text":"294"},"Update the dependencies array to be: [graph_isEdgeScaled, graph_edgeScaleFactor, props.graphObject]",{"range":"295","text":"296"},"Update the dependencies array to be: [draw, isUserDrawChart, props]",{"range":"297","text":"298"},[2487,2507],"[draw, graph_isUserReDraw, props]",[3532,3577],"[graph_clusterMethod, graph_isUserClustering, props]",[4872,4915],"[graph_isEdgeScaled, graph_edgeScaleFactor, props.graphObject]",[1738,1755],"[draw, isUserDrawChart, props]"]